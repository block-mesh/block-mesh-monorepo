{
  "db_name": "PostgreSQL",
  "query": "\n        WITH time_diffs AS (\n            SELECT\n                id,\n                created_at,\n                user_id,\n                lag(created_at) OVER (ORDER BY created_at) AS prev_created_at\n            FROM\n                uptime_reports\n            WHERE\n                user_id = $1\n        ),\n        grouped_times AS (\n            SELECT\n                id,\n                created_at,\n                user_id,\n                prev_created_at,\n                CASE\n                    WHEN EXTRACT(EPOCH FROM (created_at - prev_created_at)) <= 60 THEN 0\n                    ELSE 1\n                END AS time_gap\n            FROM\n                time_diffs\n        ),\n        group_ids AS (\n            SELECT\n                id,\n                created_at,\n                user_id,\n                prev_created_at,\n                SUM(time_gap) OVER (ORDER BY created_at) AS group_id\n            FROM\n                grouped_times\n        ),\n        latest_group AS (\n            SELECT\n                MAX(group_id) AS latest_group_id\n            FROM\n                group_ids\n        )\n    SELECT\n        gt.user_id,\n        MIN(gt.created_at) AS start_time,\n        MAX(gt.created_at) AS end_time,\n        CAST(EXTRACT(EPOCH FROM MAX(gt.created_at) - MIN(gt.created_at)) AS DOUBLE PRECISION) AS duration_seconds\n    FROM\n        group_ids gt\n    JOIN\n        latest_group lg\n    ON\n        gt.group_id = lg.latest_group_id\n    GROUP BY\n        gt.user_id, gt.group_id\n    ORDER BY\n        gt.user_id\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "user_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "start_time",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 2,
        "name": "end_time",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 3,
        "name": "duration_seconds",
        "type_info": "Float8"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid"
      ]
    },
    "nullable": [
      false,
      null,
      null,
      null
    ]
  },
  "hash": "f792504a2463c995be7201c8fdee034b08f36e692ecbbee356d1c858d2e01124"
}
