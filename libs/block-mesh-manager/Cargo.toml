[package]
name = "block-mesh-manager"
version = { workspace = true }
edition = "2021"
authors.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
num-traits = { workspace = true }
reqwest = { workspace = true, default-features = false, features = [
  "multipart",
  "json",
] }
validator = { workspace = true }
url = { workspace = true }
askama = { workspace = true, features = ["with-axum", "serde-json"] }
form_urlencoded = { workspace = true }
askama_axum = { workspace = true }
tokio-stream = { workspace = true, features = ["sync"] }
http-body-util = { workspace = true }
serde = { workspace = true, features = ["derive"] }
anyhow = { workspace = true }
thiserror = { workspace = true }
chrono = { workspace = true, features = ["clock", "serde"] }
tracing = { workspace = true }
serde-aux = { workspace = true }
config = { workspace = true }
dotenv = { workspace = true }
enum-iterator = { workspace = true }
block-mesh-common = { path = "../block-mesh-common", features = ["async-tracer", "ip-data"] }
tokio = { workspace = true, features = ["full"] }
axum-login = { workspace = true }
tower-sessions-sqlx-store = { workspace = true, features = ["postgres"] }
axum = { workspace = true, features = ["ws", "macros"] }
tower = { workspace = true, features = ["util"] }
serde_json = { workspace = true, features = ["raw_value"] }
tower-http = { workspace = true, features = ["fs", "trace", "request-id", "util", "cors", "add-extension"] }
async-trait = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
tracing-appender = { workspace = true }
tracing-bunyan-formatter = { workspace = true }
tracing-log = { workspace = true }
http = { workspace = true }
bcrypt = { workspace = true }
secret = { path = "../secret", features = ["sqlx"] }

[dependencies.rand]
workspace = true
features = ["min_const_gen"]

[dependencies.sqlx]
workspace = true
default-features = false
features = [
  "any",
  "runtime-tokio-rustls",
  "macros",
  "postgres",
  "uuid",
  "chrono",
  "migrate",
  "json",
  "bigdecimal"
]

[dependencies.uuid]
workspace = true
features = [
  "v4", # Lets you generate random UUIDs
  "fast-rng", # Use a faster (but still sufficiently random) RNG
  "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
  "serde", # Enable serialization/deserialization of UUIDs
  "js"
]

