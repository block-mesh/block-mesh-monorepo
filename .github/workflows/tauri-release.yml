name: Build and publish Tauri
permissions:
  contents: "write"
on:
  workflow_run:
    workflows: ["Tag"]
    types:
      - "completed"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  get-tag:
    name: "Get Tag From Package Version"
    runs-on: "ubuntu-latest"
    outputs:
      pkg-version: ${{ steps.pkg-version.outputs.PKG_VERSION }}
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ vars.RUSTC_VERSION }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: release-tag
          cache-all-crates: true
      - name: "Get tag"
        id: "pkg-version"
        shell: "bash"
        run: |
          echo PKG_VERSION=$(grep -m 1 '^version' Cargo.toml | sed -e 's/^version\s*=\s*//' | sed -e 's/"//g') >> $GITHUB_OUTPUT
  publish-tauri:
    name: "Publish Tauri"
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs: "get-tag"
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
            target: "aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
            target: "x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
            target: "x86_64-unknown-linux-gnu"
          - platform: "windows-latest"
            args: ""
            target: "x86_64-pc-windows-msvc"
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: "Cache"
        uses: Swatinem/rust-cache@v2
        with:
          key: tauri-build-${{ matrix.target }}
          cache-all-crates: true
      - name: Install sqlx-cli
        run: cargo install sqlx-cli
          --version=${{ vars.SQLX_VERSION }}
          --features ${{ vars.SQLX_FEATURES }}
          --no-default-features
          --locked
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ vars.RUSTC_VERSION }}
          targets: wasm32-unknown-unknown , ${{ matrix.target }}
      - uses: jetli/trunk-action@v0.5.0
        with:
          version: 'latest'
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          ref: refs/tags/v${{ needs.get-tag.outputs.pkg-version }}
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
